# This file is part of eRCaGuy_dotfiles: https://github.com/ElectricRCAircraftGuy/eRCaGuy_dotfiles

# INSTRUCTIONS:
# Edit as desired, then copy this file to any git repository you desire.
# Ex: `cp -i .gitignore /path/to/my/git/repo/`

# Copied from this project: eRCaGuy_dotfiles: https://github.com/ElectricRCAircraftGuy/eRCaGuy_dotfiles
#
# Gitignore File Formatting Notes:
# - add a / *after* a name to indicate a folder, and leave it off to indicate a file;
#   - example usage: `folder/`, `file`
# - Add a / *before* a name to indicate it is an absolute-style path starting at the "root" 
#   directory where this very .gitignore file is located; note this "root" directory is NOT 
#   necessarily this git repo's root directory where the ".git" folder is located, but rather, 
#   it is the directory where this .gitignore file is located;
#   - example usage: `/folder/`, `/file`
#   - See: https://stackoverflow.com/questions/43555850/git-gitignore-to-ignore-only-folder-in-root-directory/43555863#43555863
# - Use asterisks (*) for wildcards; ex: `/mydir/*/*.cpp`
# - Add an exclamation mark (!) *before* a path to indicate you do NOT want it ignored, even if 
#   it otherwise matches a path to ignore; example:
#   ```
#   /ignored_dir/*                          # ignore all **contents of** this dir
#   !/ignored_dir/special_file_to_include   # EXCEPT for this file--DO include it!
#   !/ignored_dir/special_dir_to_include/   # And EXCEPT for this dir--DO include it!
#   ```
#   Note, however, that if you've ignored a directory DIRECTLY, rather than merely its **contents**,
#   you canNOT UNignore anything in it! Therefore, you must change the ignore rule from ignoring the
#   directory to ignoring the **contents** of the directory! 
#   See here: https://stackoverflow.com/a/5285539/4561887 
#   and also my answer here: https://stackoverflow.com/a/67551691/4561887
#   Example:
#   ```
#   # OK: we CAN use the `!` rule after this ignore to UNignore something inside the "ignored_dir":
#   /ignored_dir/*                          # ignore all **contents of** this dir
#   !/ignored_dir/special_file_to_include   # EXCEPT for this file--DO include it!
#
#   # **NOT** OK (UNignores inside the ignored dir will NOT work)!: we can NOT use the `!` rule 
#   after this ignore to UNignore something, as it simply won't work:
#   /ignored_dir/                           # ignore this dir itself (UNignores in this dir will NOT
#                                           # work now!)
#   !/ignored_dir/special_file_to_include   # Does NOT work! See above for the correct ignore style
#                                           # which _will_ allow subsequent UNignores!
#   ```

# Another example of UNignoring files and folders within an ignored dir (see comments above 
# for more info.):
#
# # Exclude the _contents of_ the build dir
# /build/*
# # But DO include the "include" dir, and the readme
# !/build/include/
# !/build/README.md


/git_branch_hash_backups/
/private/

temp/

# Temporary LibreOffice Writer & Calc files
*.odt#
*.ods#

# Sublime Text workspace files
# - you don't need to back these up, as they are auto-generated from a project file and specific
#   to a local machine
# - back up only the *.sublime-project files instead!
*.sublime-workspace

# Symbolic links (which are files) to Bazel build *folders*
/bazel-bin
# /bazel-MY_PROJECT_NAME_HERE
/bazel-out
/bazel-testlogs
